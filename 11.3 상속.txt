상속 (Inheritance)
	ex) 
	class Parent { 
		int age ;			-->멤버 1개
	}

	class Child extends Parent { 
					---> 자신의 멤버 0개 + 상속받은 멤버 1개 = 1개
 	}

포함 (composite)
	- 클래스의 멤버로 참조변수 (다른 클래스 타입의 변수 )를 선언하는 것

	ex) class Circle { 
		int x ;
		int y ;
		int z ; 
	    }

  		Circle c = new  Circle( ) ;
		c.x , c.y , c.r 

                      ↓

	class Point {
		int x ;
		int y ;
	}


	class Circle {
		Point c = new Point ( ) ; 
		int r ;
	}
		Circle c = new  Circle( ) ;
		c.c.r , c.c.y , c.r

	- 작은 단위의 클래스를 만들고, (위의 예제에서는 Point)
	  이 들을 조합해서 클래스를 만든다.   -> 복잡도가 줄어든다.

	- 클래스 간의 관계 결정하기
		상속관계 : ~은 ~이다 ( is - a )
		포함관계 : ~은 ~을 가지고 있다 ( has - a )

	- 보통 90% 이상 포함관계이다 . 
	  상속관계는 여러가지 제약이 많아서 꼭 필요한경우에 사용한다.


단일상속( Single Inheritance )
	-java는 단일 상속만을 허용한다. 

	- 여러 클래스를 이용하고 싶을 때는
	  비중이 높은 클래스 하나만 상속관계로, 나머지는 포함관계로 한다.


Objext 클래스 - 모든클래스의 조상
	- 부모가 없는 클래스는 자동적으로 Object클래스를 상속받게 된다.
		-> 모든 클래스는 Object클래스에 정의된 11개의 메서드를 상속받는다.
		   ( 상속받는 클래스가 있어도  그 클래스가 Object 클래스를 상속받으니.)
			ex) toString(), equals(Object obj), hashCode() , ...



