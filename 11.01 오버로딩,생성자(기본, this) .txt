오버로딩 조건
	1. 메서드 이름이 같아야한다.
	2. 매개변수의 개수 또는 타입이 달라야한다.	
	3. 반환타입은 상관없다.

생성자   
	- 인스턴스가 생성될 때마다 호출되는 '인스턴스 초기화 메서드'
                                                               ='iv'(인스턴스 변수) 초기화

	조건
	1. 이름이 클래스 이름과 같아야 한다.
	ex)class Card{
		...
		Card() { //매개변수 없는 생성자.
		 // 인스턴스 초기화 작업
		}

		Card( String kind, int number) { //매개변수 있는 생성자.
		// 인스턴스 초기화 작업
		}
	}

            		->생성자 오버로딩 - Card라는 같은 생성자 이름을 가지지만 안의 
			  	 매개변수가 다르다.

	2. 리턴값이 없다.( void안붙임 -void는 반환타입이 정해지지 않았을 때)

	3. 모든 클래스는 반드시 생성자를 하나 이상 가져야 한다.
		->생성자가 없을 경우 defalut값으로 매개변수가 없는 생성자
		   즉, 기본생성자를 컴파일러가 생성해준다.

	cf) Card c = new Card(); ->기본생성자를 호출하는 것.
			          근데 생성자가 없으면 호출을 할 수 없다.
			          but, 생성자가 없을 경우 defalut값으로
		 	          기본생성자를 컴파일러가 생성해준다.

	기본생성자 -> Car() {
		       	...
                                }

	ex) Car c = new Car ("white", "auto", 4 );
		1) Car c -> 참조변수 c를 만든다.
		2) new : 생성자를 만든다.
		3) Card("white", "auto", 4 ); : 객체 (인스턴스) 초기화 = iv초기화
		4) = 대입 : 객체 Car의 주소 0X100 (임의로 정한주소임) 가 참조변수 c에 들어감.

생성자 this
 	- 생성자에서 다른 생성자 호출할 때 사용
	- 다른 생성자 호출 시 첫 줄에서만 사용가능

	ex) 
	class Car{
		String color;
		String gearType;
		int door;
	
		Car() {
			//Card( "white", "auto", 4 ); ->원래 다른 생성자를 호출하려면 이름을 
						써야하는데 같은 생성자 이므로 this를
						사용하여 호출한다.
			
			this( "white", "auto", 4 ); ->코드의 중복을 제거한 코드
		}

		Car( Stirng c, String g, int d ) {
			color = c ;
			gearType= g ;
			door = d ;
		}
 	}
			
	
참조변수 this
	- 인스턴스 자신을 가리키는 참조변수  ---> 생성자 this와 아예 다른 개념
	- 인스턴스 메서드 (생성자 포함)에서 사용가능
	- 지역변수(lv)와 인스턴스 변수(iv)를 구별할 때 사용
	
	ex) Car( String c, String g, int d ) {
		//color는 iv, c는 lv
		color = c ;		------>lv != iv 인 경우는 this를 사용해서
		gearType = g ;		         구별해주지 않아도 된다.
		door = d ;		         (같은 클래스라서 생략 가능)
	    }

	ex) Car( String color, String gearType, int door ) {
		//this.color 는 iv, color는 lv
		this.color = color ;		 	----->lv = iv 인 경우는 this를 사용해서
		this.gearType = gearType ;    	       구별해주어야 한다.
		this.door = door ;		         
	    }


	cf) static long add( long a, long b ) {		//클래스 메서드 (static method)
		return a+b ;			//->iv사용불가 -> this사용불가
	   }					// 여기에서 a,b 는 지역변수임


	   long add() { 		//인스턴스 메서드
		return a +b 	// return this.a + this.b 인데 this 생략가능(구분할 필요 없어서) 


정리
	참조변수 this : 인스턴스 자신을 가리키는 참조변수 -> 인스턴스의 주소가 저장되어 있다.
		       모든 인스턴스메서드에 지역변수로 숨겨진 채로 존재한다.

	생성자 this(), this(매개변수) : 생성자. 같은 클래스의 다른 생성자를 호출할 때 사용한다.