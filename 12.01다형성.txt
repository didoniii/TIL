다형성 (Polymorphism)
	- 조상 타입 참조 변수로 자손 차입 객체를 다루는 것.

	Tv t = new SmartTV( ); //조상 타입 참조변수로 자손 타입 인스턴스 참조.
	t : TV의 리모컨 (버튼이 5개다)
	SmartTV의 기능은 7개여도 버튼이 5개밖에 없어서 5개기능만 쓸 수 있다.

	Tv 	t = new SmartTV( );	-> 가능
	SmartTv  s = new Tv( ); 		-> 불가능
	s: SmartTv의 리모컨 (버튼이 7개)
	리모컨 버튼은 7개인데 기능이 5개밖에 없는 것은 에러가 난다.
	
	★ 자손 타입의 참조변수로 부모타입의 인스턴스를 참조하는 것은 불가능하다.



참조변수의 형변환 
	- 사용할 수 있는 멤버의 갯수를 조절하는것
	- 조상, 자손 관계의 참조변수는 서로 형변환 가능. (형제관계는 안됨)

	FireEngine(자손타입)은 기능 5개 Car(부모타입)는 기능 4개일때,
	1. 5개
	FireEngine f = new FireEngine();
	2. 4개
	Car c = (Car) f; 			//OK. 조상인 Car타입으로 형변환 ( 생략가능 )
	3. 5개
	FireEngine f2 = (FireEngine) c;  	//OK. 자손인 FireEngine타입으로 형변환 ( 생략불가 )
	
설명 : 참조변수 f의 주소값이 0x100이라고 가정하고, f는 자손 타입이므로 기능 5개 가능.
	참조변수 c는 f의 주소를 받아 0x100 을 가리키지만 Car 타입이므로 기능 4개 가능.
	참조변수 f1는 c의 주소를 받아 0x100을 가리키고 FireEngine타입이므로 기능 5개 가능.
	
	Ambulance a = (Ambulance) f;  	//에러. 상속관계가 아닌 클래스 간의 형변환 불가

	